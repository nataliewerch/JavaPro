1. Какие особенности у Stream?
    Высокая производительность, гибкость.
    Пока нет терминальной операции ничего не выполнится.
    После терминальной операции вызов интермедийной операции не будет иметь эффекта.
    Вызвать можно один раз
    Не изменяет исходную коллекцию.
    Методы не должны быть NULL.

2. Какие 2 основных типа операций есть в Stream?
    - Intermediate
    - Terminal

3. Что будет если дважды вызвать терминальную операцию на Stream?
    Будет сгенерировано исключение IllegalStateException, т.к. после вызова терминальной операции
поток данных будет завершен и не может быть перезапущен.

4. Перечислите несколько intermediate operators
    - .map()
    - .filter()
    - .peek()
    - .sorted()
    - .distinct()
    - .limit()
    - .skip()

5. Перечислите несколько terminate operators
    - .collect()
    - .forEach()
    - .findFirst()
    - .findAny()
    - .min()
    - .max()
    - .count()
    - .sum()
    - .allMatch()

6. Как обрабатываются пайплайны(интермдиейт опараторы в Stream) сразу на все данные все пайплайны на 1 объект?
    Каждый элемент обрабатывается независимо от остальных, т.е. последовательно.

7. Какая особенность есть у .sorted(..)?
    Является stateful операцией, она требует доступ ко всем элементам потока, чтобы отсортировать их.
Может привести к неопределенности выполнения порядка на параллельных потоках.

8. Все ли операции stateless?
    Нет, есть операции stateful(напр., .sorted(), .distinct()).

9. Какое преимущество stateless операций?
    Они не зависят от состояния предыдущих элементов потока, не сохраняют состояние между вызовами и не изменяют исходный поток данных.

10. Почему peek лучше не использовать для дополнительной логики подсчета?
   Он предназначен для выполнения операций с элементами потока без изменения самих элементов и не гарантирует порядок выполнения действий
над элементами потока, поэтому дополнительная логика может привести к непредсказуемым результатам.